<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-10-30 at 03:11:40.
 */
class AuthentificatedCustomerTest extends PHPUnit_Framework_TestCase {

    protected function mkCustomer($id, $friends) {
        $user = new AuthentificatedUser($id . "@example.com",
                "name" . $id, "surname" . $id, FALSE, $id,
                new UserRole(UserRole::CUSTOMER),
                "password" . $id, $id);
        return new AuthentificatedCustomer($user, $friends);
    }

    /**
     * @covers AuthentificatedCustomer::addFriend
     */
    public function testAddFriend() {
        $customer = $this->mkCustomer("0", array());
        $customer->addFriend($this->mkCustomer("1", array()));
        $customer->addFriend($this->mkCustomer("2", array()));
        $customer->addFriend($this->mkCustomer("3", array()));
        assert($customer->getFriends() ==
                array(
                    "1" =>$this->mkCustomer("1", array()),
                    "2" => $this->mkCustomer("2", array()),
                    "3" => $this->mkCustomer("3", array()),
                ));
    }

    /**
     * @covers AuthentificatedCustomer::delFriend
     */
    public function testDelFriend() {
        $friends = array(
            "1" => $this->mkCustomer("1", array()),
            "2" => $this->mkCustomer("2", array()),
            "3" => $this->mkCustomer("3", array()),
        );
        $customer = $this->mkCustomer("0", $friends);
        $customer->delFriend($this->mkCustomer("1", array()));
        $customer->delFriend($this->mkCustomer("3", array()));
        $customer->delFriend($this->mkCustomer("2", array()));
        $friends2 = $customer->getFriends();
        assert(empty($friends2));
    }

    /**
     * @covers AuthentificatedCustomer::addFriend
     * @covers AuthentificatedCustomer::delFriend
     */
    public function testChangesTrackingAddDelFriend() {
        $friends = array(
            "1" => $this->mkCustomer("1", array()),
            "2" => $this->mkCustomer("2", array()),
            "3" => $this->mkCustomer("3", array()),
        );
        $customer = $this->mkCustomer("0", $friends);
        $customer->delFriend($this->mkCustomer("1", array()));
        $customer->delFriend($this->mkCustomer("3", array()));
        $customer->delFriend($this->mkCustomer("2", array()));

        $customer->addFriend($this->mkCustomer("10", array()));
        $customer->addFriend($this->mkCustomer("11", array()));

        foreach ($customer->getValueChanges() as $change) {
            $field = $change->getField();

            if ($field == AuthentificatedCustomer::CH_FRIENDS) {
                assert($change->getOldVal() == $friends);
                assert($change->getNewVal() == array(
                    "10" => $this->mkCustomer("10", array()),
                    "11" => $this->mkCustomer("11", array())
                ), "Invalid change set: " . var_export($change->getNewVal(), true));
            } else {
                assert(FALSE, "Only friends should be changed");
            }
        }
    }
}